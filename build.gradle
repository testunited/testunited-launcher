/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.0/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
	id 'com.palantir.docker' version '0.22.1'    
	id 'maven-publish'
}

group 'org.testunited'
version '0.0.1-SNAPSHOT'


repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenLocal()
    mavenCentral()
    jcenter()
    
}


publishing {
	publications {
    	mavenJava(MavenPublication) {
        	from components.java
    	}
	}
	repositories {
	    maven {
	        name "snapshots"
	        url "https://repo.deps.co/chamithsri/snapshots"
	        credentials {
	            username "$depsKey"
	            password "$depsSecret"
	        }
	    }
    }
}
docker {
    name "testunited/${jar.baseName}:latest"
    println("Doker Image: testunited/${jar.baseName}")
    files jar.archivePath, 'startup.sh'
    copySpec.from("build/libs").into(".")
    buildArgs(['JAR_FILE': "${jar.baseName}-${jar.version}.jar"])
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:26.0-jre'
	implementation 'org.apache.httpcomponents:httpclient:4.5.3'
    implementation 'org.junit.jupiter:junit-jupiter-api:5.3.2'
    implementation 'org.junit.platform:junit-platform-launcher:1.4.2'
    implementation 'org.eclipse.aether:aether-api:1.1.0'
    implementation 'org.eclipse.aether:aether-spi:1.1.0'
    implementation 'org.eclipse.aether:aether-util:1.1.0'
    implementation 'org.eclipse.aether:aether-impl:1.1.0'
    implementation 'org.eclipse.aether:aether-connector-basic:1.1.0'
    implementation 'org.eclipse.aether:aether-transport-file:1.1.0'
    implementation 'org.eclipse.aether:aether-transport-http:1.1.0'
    implementation 'org.apache.maven:maven-aether-provider:3.3.9'
    implementation 'org.apache.maven:maven-model:3.6.1'
    implementation 'org.junit.jupiter:junit-jupiter-engine:5.3.2'
    implementation 'io.rest-assured:rest-assured:4.0.0'
    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.11.2'
    
    implementation 'org.testunited:testunited-api:0.0.1-SNAPSHOT'    
}

jar {
  	manifest {
    	attributes 'Main-Class': 'org.testunited.launcher.TestUnitedTestLauncher'
  	}
  	from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task runJar(group: "Run", description: "Runs the Jar built by the 'build' task", type: JavaExec) {
    dependsOn = [build, test]
    main = "-jar";
    args jar.archivePath
}
